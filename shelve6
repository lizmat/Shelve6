#!/usr/bin/env perl6

use v6;

use Config;

use Shelve6::Logging;
use Shelve6::Server::HttpServer;

# XXX use'ing a role that 'does' another role but has no methods in them leads
# to confusing messages, and the exact message seems non-deterministic

my $config-file = 'config.yaml';

my $log = Shelve6::Logging.new('main');
my $config = Config.new();

my @repositories;

$log.info("Shelve6 starting...");
$log.debug("Reading config from $config-file...");
# XXX validate top level keys and that the top is a hash, and that repositories
# is a list
$config.read($config-file);
for @($config.get<repositories>) -> $repo {
    # XXX make sure names are unique
    my $repo-type = 'Shelve6::Repository::' ~ $repo<type>;
    require ::($repo-type); # XXX catch excpetion from this
    my $repo-object = ::($repo-type).new();
    $repo-object.configure($repo);
    push @repositories, $repo-object;
}

my $server = Shelve6::Server::HttpServer.new();
$server.configure($config.get<server>);

my $store-cfg = $config.get<store>;
my $store-type = 'Shelve6::Store::' ~ $store-cfg<type>;
require ::($store-type); # XXX catch excpetion from this
my $store = ::($store-type).new();
$store.configure($store-cfg);

$store.start;
$log.debug("Starting components...");
for @repositories -> $repo {
    $repo.set-server($server);
    $repo.set-store($store);
    $repo.start;
}
$server.start;

$log.debug("Application initialization complete!");
signal(SIGINT).tap: {
    $log.debug("Shutting down components...");
    $server.stop;
    for @repositories -> $repo {
        $repo.stop;
    }
    $store.stop;
    $log.info("Clean shutdown, see you later!");
    exit;
}
sleep;
